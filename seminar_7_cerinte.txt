Problema 1:
Să se construiască o aplicație în care:

- programul principal pornește 10 fire de execuție noi în paralel
- fiecare fir de execuție:
	- afișează în ordine numerele de la 1 la 100 și identificatorul firului de execuție
	- așteaptă 1-100 milisecunde între afișări
- programul principal afișează identificatorul firului de execuție care a câștigat (a ajuns primul la 100)
- când un fir de execuție câștigă celelalte fire de execuție trebuie să se oprească și să afișeze numărul la care s-au oprit

Problema 2:
Fie o clasă Cont cu un câmp sold de tip întreg și două metode: depune(suma) și getSold.
Să se scrie un program care lansează 10 de fire de execuție. Fiecare fir de execuție va depune câte 1 leu de 1000 de ori. Firele de execuție trebuie să ruleze în paralel și să folosească același obiect cont.
Să se afișeze soldul final din cont.

Problema 3:
Să se scrie o funcție care determină valoarea maximă dintr-un vector de întregi folosind două fire de execuție care rulează în paralel.

Problema 4:
Înmulțire de matrice pe blocuri (execuție paralelă).

Problema 5:
Exemplu de scenariu producător-consumator folosind BlockingQueue.

Problema 6:
Implementare recursivă paralelizată pentru determinarea valoarii maxime dintr-un vector (folosind ForkJoinPool și RecursiveTask).